<svg xmlns="http://www.w3.org/2000/svg" style="background-color: rgb(255, 255, 255);" width="724px" height="804px" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><defs/><g transform="translate(0.5,0.5)"><rect x="2" y="2" width="330" height="800" fill="#ffffff" stroke="#000000"/><g transform="translate(2,2)"><switch><foreignObject pointer-events="all" width="331" height="800" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 14px; vertical-align: top; width: 330px; height: 800px; white-space: nowrap;"><p style="margin: 0px; margin-top: 4px; text-align: center;"><strong>Cylinder</strong></p><hr /><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* x: int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* y: Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* percentageContent: Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* containerHeight: Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* topWidth: Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* bottomWidth: Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* yRotation: Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* padding: Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* hasContent: Boolean</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* paper: Raphael.Canvas</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* ox: Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* oy: Int</span></p><p style="margin: 0px; margin-left: 4px;">Â </p><hr /><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* isTopSmallerThanBottom(): Boolean</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* ellipsesDifference(): Int</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* getTopRy(): Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* getBaseRy(): Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* getCylinderAngle(): Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* getTopContentWidth(): Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* getTopContentRy(): Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* getBaseContentRy(): Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* updateElements(cylinderInstance): void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* drag(onStart, onMove, onMouseUp): void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* undrag(): void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* transfer(transfuser, receiver, hasAnimation, transfuseCylinder, receiverCylinder): void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">* areCylindersJoined(cylinder1, cylinder2): Boolean</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- areContentsJoined(content1, content2): Boolean</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- afterTransferCallback(): void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- mousedownParent(cylinderInstance, fromContent) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- mousedownChildren(cylinderInstance, fromContent) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- mouseUpParent(cylinderInstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- mouseUpChildren(cylinderInstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- startChildren(cylinderInstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- startParent(cylinderInstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- moveChildren(cylinderInstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- moveParent(cylinderInstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- dragStart() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- dragMove() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- dragUp() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- transferStart() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">- getUpMostParent(cylinderinstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">+ animate(animationSettings, cylinderCallback) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">+ attr(attrSettings, cylinderCallback) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">+ undraggable() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">+ draggable() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">+ transferable() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10px;">+ update() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: xx-small;">+ sendBottom(parentCylinder, childCylinder) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: xx-small;">+ join(cylinderInstance) : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: xx-small;">+ debug() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: xx-small;">+ getTotalVolumen() : Float</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: xx-small;">+ displayVolumen() : void</span></p><p style="margin: 0px; margin-left: 4px;"><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: xx-small;">+ updateVolumenText() : void</span></p></div></foreignObject><text x="166" y="406" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Object]</text></switch></g><rect x="372" y="32" width="210" height="50" fill="none" stroke="none"/><g fill="#000000" font-family="Helvetica" font-size="12px"><text x="374" y="45">* Properties/Methods are protected</text><text x="374" y="59">- Properties/Methods are private</text><text x="374" y="73">+ Properties/Methods are public</text></g><rect x="372" y="92" width="350" height="210" fill="none" stroke="none"/><g fill="#000000" font-family="Helvetica" font-size="12px"><text x="374" y="105">To access every property or method, given a specific cylinder:</text><text x="374" y="133">var c1 = rsr.cylinder(x, y, 10, 10, 80, 30, true, 40);</text><text x="374" y="161">Protected</text><text x="374" y="175">c1.prototype.PROTECTED_PROPERTY</text><text x="374" y="189">c1.prototype.PROTECTED_METHOD()</text><text x="374" y="217">Public</text><text x="374" y="231">c1.PUBLIC_PROPERTY</text><text x="374" y="245">c1.PUBLIC_METHOD()</text></g></g></svg>